import Link from "next/link"
import ThemeToggle from "@/components/theme-toggle"
import { Rocket, Github } from 'lucide-react'

export default function Header() {
  return (
    <header className="sticky top-0 z-40 border-b border-white/5 bg-[color:var(--bg-800)]/60 backdrop-blur supports-[backdrop-filter]:bg-[color:var(--bg-800)]/40">
      <div className="mx-auto flex w-full max-w-6xl items-center justify-between px-4 py-3">
        <a
          href="#home"
          className="group inline-flex items-center gap-2 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[var(--accent)]"
        >
          <div className="flex h-8 w-8 items-center justify-center rounded-full bg-white/5 text-[var(--fg)] ring-1 ring-white/10">
            <Rocket className="h-4 w-4 transition-transform group-hover:rotate-12 motion-reduce:transition-none" />
          </div>
          <span className="font-medium tracking-tight text-[color:var(--fg)]">Aniruddha Chaudhari</span>
        </a>
        <nav aria-label="Primary" className="hidden items-center gap-6 text-sm text-[color:var(--muted)] sm:flex">
          <a href="#home" className="hover:text-[color:var(--fg)] focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[var(--accent)]">Profile</a>
          <a href="/projects" className="hover:text-[color:var(--fg)] focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[var(--accent)]">Projects</a>
          <a href="#github" className="hover:text-[color:var(--fg)] focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[var(--accent)]">GitHub</a>
          <a
            href="https://github.com/aniruddha-chaudhari"
            target="_blank"
            rel="noreferrer"
            aria-label="GitHub profile"
            className="inline-flex items-center gap-2 hover:text-[color:var(--fg)] focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[var(--accent)]"
          >
            <Github className="h-4 w-4" />
            <span className="hidden sm:inline">Profile</span>
          </a>
        </nav>
        <div className="flex items-center gap-2">
          <ThemeToggle />
        </div>
      </div>
    </header>
  )
}

"use client"

import { Button } from "@/components/ui/button"
import Image from "next/image"
import Link from "next/link"
import { ArrowRight, Download, Github } from 'lucide-react'

export default function Hero() {
  return (
    <div className="mx-auto grid w-full max-w-6xl items-center gap-6 px-4 md:grid-cols-[240px_1fr] md:gap-8">
      <div className="flex justify-center md:justify-start">
        <div className="relative h-40 w-40 overflow-hidden rounded-full ring-1 ring-white/10 shadow-[0_8px_40px_-16px_rgba(0,0,0,0.6)]">
          <Image src="/images/profile.png" alt="Profile photo" fill sizes="160px" className="object-cover" priority />
        </div>
      </div>
      <div className="space-y-4 text-center md:text-left">
        <div className="space-y-1">
          <p className="text-sm uppercase tracking-widest text-[color:var(--muted)]">Software Engineer</p>
          <h1 className="text-4xl font-bold leading-tight text-[color:var(--fg)] sm:text-5xl">
            Aniruddha Chaudhari
          </h1>
          <p className="max-w-2xl text-lg text-[color:var(--fg)]">
            Building elegant, accessible web experiences
          </p>
          <p className="max-w-2xl text-[color:var(--muted)]">
            I craft performant, resilient interfaces with a focus on clean architecture, great UX, and maintainable code.
          </p>
        </div>
        <div className="flex flex-col gap-3 sm:flex-row sm:justify-start sm:gap-4">
          <Button asChild className="group bg-[color:var(--bg-700)] text-[color:var(--fg)] hover:bg-[color:var(--bg-700)]/80">
            <a href="#projects" aria-label="View Projects">
              View Projects
              <ArrowRight className="ml-2 h-4 w-4 transition-transform group-hover:translate-x-0.5 motion-reduce:transition-none" />
            </a>
          </Button>
          <Button asChild variant="outline" className="border-white/10 text-[color:var(--fg)] hover:bg-white/5 bg-transparent">
            <a href="/cv.pdf" download aria-label="Download CV (PDF)">
              <Download className="mr-2 h-4 w-4" />
              Download CV
            </a>
          </Button>
          <Button asChild variant="ghost" className="text-[color:var(--fg)] hover:bg-white/5">
            <Link href="https://github.com/aniruddha-chaudhari" aria-label="View GitHub profile">
              <Github className="mr-2 h-4 w-4" />
              GitHub
            </Link>
          </Button>
        </div>
      </div>
    </div>
  )
}

import { Code2 } from 'lucide-react'
import Section from "@/components/section"
import SkillsChips from "@/components/skills-chips"

export default function ClientPage() {
  return (
    <>
      <Section id="skills" title="Skills" icon={<Code2 className="h-5 w-5" />} className="-mt-6 md:-mt-8">
        <SkillsChips />
      </Section>
    </>
  )
}

"use client"

import type React from "react"
import { useState } from "react"
import { Github, Linkedin, Twitter, Mail, Globe } from 'lucide-react'
import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from "@/components/ui/tooltip"
import { useTheme } from "next-themes"

type Social = {
  name: string
  href: string
  icon: React.ComponentType<{ size?: number; className?: string }>
}

const socials: Social[] = [
  { name: "GitHub", href: "https://github.com/aniruddha-chaudhari", icon: Github },
  { name: "LinkedIn", href: "https://www.linkedin.com/in/aniruddha-chaudhari", icon: Linkedin },
  { name: "Twitter", href: "https://twitter.com/", icon: Twitter },
  { name: "Website", href: "#", icon: Globe },
  { name: "Email", href: "mailto:hello@example.com", icon: Mail },
]

export default function SocialDock() {
  const [isHovered, setIsHovered] = useState(false)
  const [hoveredIndex, setHoveredIndex] = useState<number | null>(null)
  const { resolvedTheme } = useTheme()
  const isDarkMode = resolvedTheme === "dark"

  return (
    <nav className="fixed bottom-4 left-1/2 z-50 -translate-x-1/2">
      {/* Desktop dock - transparent like header */}
      <div
        className="hidden md:block p-2 rounded-[28px] border border-white/5 bg-[color:var(--bg-800)]/60 backdrop-blur supports-[backdrop-filter]:bg-[color:var(--bg-800)]/40 shadow-sm"
        onMouseEnter={() => setIsHovered(true)}
        onMouseLeave={() => {
          setIsHovered(false)
          setHoveredIndex(null)
        }}
      >
        <TooltipProvider>
          <div className={`flex items-center transition-all duration-300 ease-in-out ${isHovered ? "w-auto" : "w-max"}`}>
            {socials.map((link, index) => (
              <Tooltip key={link.name}>
                <TooltipTrigger asChild>
                  <a
                    href={link.href}
                    target={link.href.startsWith("http") ? "_blank" : undefined}
                    rel={link.href.startsWith("http") ? "noreferrer" : undefined}
                    className={`flex aspect-square cursor-pointer items-center justify-center transition-all duration-300 px-1 ${
                      isHovered ? "scale-100" : "scale-95"
                    } ${hoveredIndex === index ? "scale-110 mx-2" : "mx-0"}`}
                    style={{ width: "40px", height: "40px" }}
                    aria-label={link.name}
                    onMouseEnter={() => setHoveredIndex(index)}
                  >
                    <div className="inline-flex size-10 items-center justify-center rounded-full text-sm font-medium transition-all duration-300 hover:bg-white/10">
                      <link.icon
                        size={16}
                        className={`transition-transform duration-300 text-[color:var(--fg)] ${
                          hoveredIndex === index ? "scale-110" : "scale-100"
                        }`}
                      />
                    </div>
                  </a>
                </TooltipTrigger>
                <TooltipContent>
                  <p>{link.name}</p>
                </TooltipContent>
              </Tooltip>
            ))}
          </div>
        </TooltipProvider>
      </div>

      {/* Mobile compact dock - transparent like header */}
      <div className="md:hidden px-3 py-2 flex items-center gap-1 rounded-full border border-white/5 bg-[color:var(--bg-800)]/60 backdrop-blur supports-[backdrop-filter]:bg-[color:var(--bg-800)]/40">
        {socials.map((s) => (
          <a
            key={s.name}
            href={s.href}
            target={s.href.startsWith("http") ? "_blank" : undefined}
            rel={s.href.startsWith("http") ? "noreferrer" : undefined}
            aria-label={s.name}
            className="rounded-full p-2 hover:bg-white/10"
          >
            <s.icon size={16} className="text-[color:var(--fg)]" />
          </a>
        ))}
      </div>
    </nav>
  )
}
